services:

  client:
    build:
      context: .
      dockerfile: ./client/dockerfile
    container_name: client
    volumes:
      - ./client:/app
      - /app/node_modules
    env_file:
      - .env
    networks:
      - transcendence
    restart: unless-stopped
    ports:
      - "3000:3000"

  server:
    build:
      context: .
      dockerfile: ./server/dockerfile
    container_name: server
    volumes:
      - ./server:/var/www/server
      - /var/www/server/node_modules
    env_file:
      - .env
    networks:
      - transcendence
    restart: unless-stopped
    ports:
      - "4000:4000"

  nginx:
    build:
      context: .
      dockerfile: ./nginx/dockerfile
    container_name: nginx
    ports:
      - "443:443"
    depends_on:
      - client
      - server
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - transcendence
    image: nginx:trans
    restart: unless-stopped
  
  prometheus:
    build:
      context: ./prometheus
      dockerfile: dockerfile
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - transcendence
    restart: unless-stopped

  grafana:
    build:
      context: ./grafana
      dockerfile: dockerfile
    container_name: grafana
    ports:
      - "3001:3000"
    networks:
      - transcendence
    depends_on:
      - prometheus
    restart: unless-stopped

networks:
  transcendence:
    name: transcendence
